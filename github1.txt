GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
create a new repository , name json
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone (ssh-ключ)

 6. Внутри локального JSON создать файл “new.json”.
touch new.json

 7. Добавить файл под гит.
git add new.json

 8. Закоммитить файл.
git commit -m "create file"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
i 
{
	"firstName": "Юлия",
	"lastName": "Махначёва",
	"age": 27,
	"pets": "no",
	"salary": "400 ye"
}


esc :wq

 11. Отправить изменения на внешний репозиторий.
git add .
git commit -m "add info"
git push

 12. Создать файл preferences.json
touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json
i {
        "favouriteFilm": "The green mile",
        "favouriteSerial": "Friends",
        "favouriteDish": "sushi",
        "favouriteSeason": "spring",
        "desiredCountry": "Georgia"
}
esc :wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch skills.json
vim skills.json
i {
        "skills": ["Виды и методы тестирования, требования, тестовая документация, клиент-серверная архитектура, HTTP-запросы, тестирование API, мобильное тестированияе, тестирование веб-приложений, командная строка Linux, основы SQL, мотодологии разработки ПО "],
        "tools": ["Postman, Charles, Fiddler, DevTools, Android Studio, Git, GitBash, Postgres, Redis, Jmeter"]
        
}
esc :wq

 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git status
git commit -m "add 2 files"
git push

 16. На веб интерфейсе создать файл bug_report.json.
add file- create new file

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 сохр файл commit new file

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
внесена инф в файл на внеш репозитории. 

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes -сохр инф в файле

 20. Синхронизировать внешний и локальный репозиторий JSON
git fetch
git pull


XML
 21. Создать внешний репозиторий c названием XML.
create a new repository  XML

 22. Клонировать репозиторий XML на локальный компьютер.
git clone ssh-ключ
 23. Внутри локального XML создать файл “new.xml”.
touch new.xml

 24. Добавить файл под гит.
git add new.xml

 25. Закоммитить файл.
git commit -m "add file new.xml"
 26. Отправить файл на внешний GitHub репозиторий.
git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
i
 <person>
        <firstName>Юлия</firstName>
        <lastName>Махначёва</lastName>
        <age>27</age>,
        <pets>no</pets>
        <salary>400 ye</salary>
</person>
esc :wq

 28. Отправить изменения на внешний репозиторий.
git add new.xml
git status
git commit -m "add info about me"
git push

 29. Создать файл preferences.xml
touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
i
<preferences>

        <favouriteFilm>The green mile</favouriteFilm>
        <favouriteSerial>Friends</favouriteSerial>
        <favouriteDishsushi</favouriteDish>
        <favouriteSeason>spring</favouriteSeason>
        <desiredCountry>Georgia</desiredCountry>
<preferences>

esc :wq

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch skills.xml
vim skills.xml
i
<skills>
 <skills>Виды и методы тестирования, требования, тестовая документация, клиент-серверная архитектура, HTTP-запросы, тестирование API, мобильное тестированияе, тестирование веб-приложений, командная строка Linux, основы SQL, мотодологии разработки ПО</skills>
   <tools>Postman, Charles, Fiddler, DevTools, Android Studio, Git, GitBash, Postgres, Redis, Jmeter</skills>
<skills>
esc :wq

 32. Сделать коммит в одну строку.
git add . | git commit -m "create 2 files"

 33. Отправить сразу 2 файла на внешний репозиторий.
git push

 34. На веб интерфейсе создать файл bug_report.xml.
add file bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
commit new file

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<bug_report>

<ID>01.etagi.com</ID>
<Summary>На сайте частично информация на русском при смене языка на английский</Summary>
<Description>При смене языка в разделе new Buildings информация частично на русском языке
Воспроизведено в Google Chrome v 98.0.4758.102
Фактический результат: Информация частично представлена на русском языке
Ожидаемый результат: Вся информация представлена на английском языке.</Description>
  <Steps>1. Зайти на сайт https://minsk.etagi.com/
2. Сменить  язык на английский в верхнем правом углу, нажать  Сохранить
3. Выбрать  New Buildings
4. Нажать  на выбранный жилищный комплекс
5. Частичная локализация- некоторые слова указаны на русском языке</Steps>
  <Severity>medium</Severity>
  <Priority>normal</Priority>
  <Reproducibility>always</Reproducibility>
  <Comments>no</Comments>
  <Attachments>no</Attachments>

</bug_report>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
commit changes

 38. Синхронизировать внешний и локальный репозиторий XML
git fetch
git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
create a new repository TXT

 2. Клонировать репозиторий TXT на локальный компьютер.
git clone git@github.com:mahnacheva-yulia/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
cd TXT
touch new.txt

 4. Добавить файл под гит.
git add new.txt

 5. Закоммитить файл.
git commit -m "create a new file"

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt
i
First name : Юлия
Last name : Махначёва
Age : 27
pets : нет
зарплата : 400 ye
esc :wq

 8. Отправить изменения на внешний репозиторий.
git add new.txt
git status
git commit -m "add info"
git push


 9. Создать файл preferences.txt
touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim  preferences.txt
i
 Favourite film: The green mile
  Favourite serial: Friends
  Favourite dish: sushi
  Favourite season: spring
  Desired country: Georgia
esc :wq

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch sklls.txt
vim sklls.txt
i
Skills:
Виды и методы тестирования, требования,
тестовая документация,
клиент-серверная архитектура,
HTTP-запросы,
тестирование API,
мобильное тестированияе,
тестирование веб-приложений,
командная строка Linux,
основы SQL,
мотодологии разработки ПО

Tools:
 Postman
 Charles
 Fiddler
 DevTools
 Android Studio
 Git
 GitBash
 Postgres
 Redis
 Jmeter
esc :wq

 12. Сделать коммит в одну строку.
git add .
git commit -m "create 2 files"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.
create a new file bug_report.txt

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
commit new files

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.

ID: 01.etagi.com
Summary: На сайте частично информация на русском при смене языка на английский
Description: При смене языка в разделе new Buildings информация частично на русском языке
             Воспроизведено в Google Chrome v 98.0.4758.102
             Фактический результат: Информация частично представлена на русском языке
             Ожидаемый результат: Вся информация представлена на английском языке.
Steps: 1. Зайти на сайт https://minsk.etagi.com/
       2. Сменить  язык на английский в верхнем правом углу, нажать  Сохранить
       3. Выбрать  New Buildings
       4. Нажать  на выбранный жилищный комплекс
       5. Частичная локализация- некоторые слова указаны на русском языке
Severity:medium
Priority:normal
Reproducibility:always
Comments:-
Attachments:-

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
commit changes

 18. Синхронизировать внешний и локальный репозиторий TXT
git getch
git pull